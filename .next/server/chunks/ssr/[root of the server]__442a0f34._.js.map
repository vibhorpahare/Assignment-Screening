{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/vibhor/Desktop/vibhor/Assignment-Screening/src/app/page.tsx"],"sourcesContent":["'use client'; // Marking the component as a client-side component\n\nimport React, { useEffect, useState } from 'react';\nimport {\n  Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Typography, Box\n} from '@mui/material';\n\n// Type for user data\ninterface UserData {\n  username: string;\n  createDate: string;\n  passwordChangedDate: string;\n  lastAccessDate: string;\n  mfaEnabled: string;\n}\n\n// Function to calculate the number of days since a given date\nconst calculateDays = (date: string): number => {\n  const currentDate = new Date();\n  const targetDate = new Date(date);\n  const diffTime = Math.abs(currentDate.getTime() - targetDate.getTime());\n  return Math.floor(diffTime / (1000 * 60 * 60 * 24)); // converting milliseconds to days\n};\n\nconst UserInfo: React.FC = () => {\n  const [userData, setUserData] = useState<UserData[]>([]);\n\n  // Simulating an API call\n  useEffect(() => {\n    const fetchData = async () => {\n      const response: UserData[] = [\n        {\n          username: 'Foo Bar1',\n          createDate: 'Oct 1 2020',\n          passwordChangedDate: 'Oct 1 2021',\n          lastAccessDate: 'Jan 4 2025',\n          mfaEnabled: 'Yes',\n        },\n        {\n          username: 'Foo1 Bar1',\n          createDate: 'Sep 20 2019',\n          passwordChangedDate: 'Sep 22 2019',\n          lastAccessDate: 'Feb 8 2025',\n          mfaEnabled: 'No',\n        },\n        {\n          username: 'Foo2 Bar2',\n          createDate: 'Feb 3 2022',\n          passwordChangedDate: 'Feb 3 2022',\n          lastAccessDate: 'Feb 12 2025',\n          mfaEnabled: 'No',\n        },\n        {\n          username: 'Foo3 Bar3',\n          createDate: 'Mar 7 2023',\n          passwordChangedDate: 'Mar 10 2023',\n          lastAccessDate: 'Jan 3 2022',\n          mfaEnabled: 'Yes',\n        },\n        {\n          username: 'Foo Bar4',\n          createDate: 'Apr 8 2018',\n          passwordChangedDate: 'Apr 12 2020',\n          lastAccessDate: 'Oct 4 2022',\n          mfaEnabled: 'No',\n        },\n      ];\n\n      setUserData(response);\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <Box sx={{ padding: 3 }}>\n      <Typography variant=\"h4\" gutterBottom>User Information</Typography>\n\n      <TableContainer component={Paper}>\n        <Table sx={{ minWidth: 650 }} aria-label=\"user info table\">\n          <TableHead>\n            <TableRow>\n              <TableCell><strong>Human User</strong></TableCell>\n              <TableCell><strong>Create Date</strong></TableCell>\n              <TableCell><strong>Password Changed Date</strong></TableCell>\n              <TableCell><strong>Days Since Last Password Change</strong></TableCell>\n              <TableCell><strong>Last Access Date</strong></TableCell>\n              <TableCell><strong>Days Since Last Access</strong></TableCell>\n              <TableCell><strong>MFA Enabled</strong></TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {userData.map((user, index) => (\n              <TableRow key={index}>\n                <TableCell>{user.username}</TableCell>\n                <TableCell>{user.createDate}</TableCell>\n                <TableCell>{user.passwordChangedDate}</TableCell>\n                <TableCell>{calculateDays(user.passwordChangedDate)}</TableCell>\n                <TableCell>{user.lastAccessDate}</TableCell>\n                <TableCell>{calculateDays(user.lastAccessDate)}</TableCell>\n                <TableCell>{user.mfaEnabled}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Box>\n  );\n};\n\nexport default UserInfo;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 295, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}